<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="16" total="25" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="WonnaFoodCustomerMobileAppResults" duration-ms="412728" started-at="2019-12-10T16:40:36 IST" finished-at="2019-12-10T16:47:28 IST">
    <groups>
    </groups>
    <test name="WonnaFoodCustomeriMobileApp" duration-ms="412728" started-at="2019-12-10T16:40:36 IST" finished-at="2019-12-10T16:47:28 IST">
      <class name="script.PlaceOrderScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.PlaceOrderScript@42d8062c]" name="BeforeClass" is-config="true" duration-ms="3002" started-at="2019-12-10T16:45:55 IST" finished-at="2019-12-10T16:45:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.PlaceOrderScript@42d8062c]" name="f" duration-ms="90476" started-at="2019-12-10T16:45:58 IST" description="Verifying the Place Order Functionality" finished-at="2019-12-10T16:47:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.PlaceOrderScript@42d8062c]" name="captureDesc" is-config="true" duration-ms="0" started-at="2019-12-10T16:45:58 IST" finished-at="2019-12-10T16:45:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.PlaceOrderScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.PlaceOrderScript@42d8062c]" name="afterClass" is-config="true" duration-ms="2" started-at="2019-12-10T16:47:28 IST" finished-at="2019-12-10T16:47:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.PlaceOrderScript -->
      <class name="script.MerchantViewScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.MerchantViewScript@60285225]" name="BeforeClass" is-config="true" duration-ms="3003" started-at="2019-12-10T16:43:56 IST" finished-at="2019-12-10T16:43:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.MerchantViewScript@60285225]" name="captureDesc" is-config="true" duration-ms="1" started-at="2019-12-10T16:43:59 IST" finished-at="2019-12-10T16:43:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.MerchantViewScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.MerchantViewScript@60285225]" name="f" duration-ms="35219" started-at="2019-12-10T16:43:59 IST" description="Verifying the Merchant View Functionality" finished-at="2019-12-10T16:44:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.MerchantViewScript@60285225]" name="afterClass" is-config="true" duration-ms="1" started-at="2019-12-10T16:44:34 IST" finished-at="2019-12-10T16:44:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.MerchantViewScript -->
      <class name="script.CartScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.CartScript@7113b13f]" name="BeforeClass" is-config="true" duration-ms="3002" started-at="2019-12-10T16:44:34 IST" finished-at="2019-12-10T16:44:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.CartScript@7113b13f]" name="captureDesc" is-config="true" duration-ms="1" started-at="2019-12-10T16:44:37 IST" finished-at="2019-12-10T16:44:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.CartScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.CartScript@7113b13f]" name="f" duration-ms="39956" started-at="2019-12-10T16:44:37 IST" description="Verifying the Cart Functionality" finished-at="2019-12-10T16:45:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.CartScript@7113b13f]" name="afterClass" is-config="true" duration-ms="1" started-at="2019-12-10T16:45:17 IST" finished-at="2019-12-10T16:45:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.CartScript -->
      <class name="script.LoginScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.LoginScript@7ce6a65d]" name="BeforeClass" is-config="true" duration-ms="3002" started-at="2019-12-10T16:41:31 IST" finished-at="2019-12-10T16:41:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.LoginScript@7ce6a65d]" name="captureDesc" is-config="true" duration-ms="1" started-at="2019-12-10T16:41:34 IST" finished-at="2019-12-10T16:41:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.LoginScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.LoginScript@7ce6a65d]" name="f" duration-ms="60981" started-at="2019-12-10T16:41:34 IST" description="Verifying Login Functionality" finished-at="2019-12-10T16:42:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.LoginScript@7ce6a65d]" name="afterClass" is-config="true" duration-ms="1" started-at="2019-12-10T16:42:35 IST" finished-at="2019-12-10T16:42:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.LoginScript -->
      <class name="script.SearchScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.SearchScript@29b5cd00]" name="BeforeClass" is-config="true" duration-ms="3001" started-at="2019-12-10T16:43:40 IST" finished-at="2019-12-10T16:43:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.SearchScript@29b5cd00]" name="captureDesc" is-config="true" duration-ms="1" started-at="2019-12-10T16:43:43 IST" finished-at="2019-12-10T16:43:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.SearchScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.SearchScript@29b5cd00]" name="f" duration-ms="12037" started-at="2019-12-10T16:43:43 IST" description="Verifying the Search Functionality" finished-at="2019-12-10T16:43:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.SearchScript@29b5cd00]" name="afterClass" is-config="true" duration-ms="5" started-at="2019-12-10T16:43:56 IST" finished-at="2019-12-10T16:43:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.SearchScript -->
      <class name="script.ProfileFunctionalityScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.ProfileFunctionalityScript@1500955a]" name="BeforeClass" is-config="true" duration-ms="3003" started-at="2019-12-10T16:42:35 IST" finished-at="2019-12-10T16:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.ProfileFunctionalityScript@1500955a]" name="captureDesc" is-config="true" duration-ms="1" started-at="2019-12-10T16:42:38 IST" finished-at="2019-12-10T16:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.ProfileFunctionalityScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.ProfileFunctionalityScript@1500955a]" name="f" duration-ms="39901" started-at="2019-12-10T16:42:38 IST" description="Verifying the Profile Functionality" finished-at="2019-12-10T16:43:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.ProfileFunctionalityScript@1500955a]" name="afterClass" is-config="true" duration-ms="1" started-at="2019-12-10T16:43:18 IST" finished-at="2019-12-10T16:43:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.ProfileFunctionalityScript -->
      <class name="script.HomePageScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.HomePageScript@e874448]" name="BeforeClass" is-config="true" duration-ms="3002" started-at="2019-12-10T16:43:18 IST" finished-at="2019-12-10T16:43:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.HomePageScript@e874448]" name="captureDesc" is-config="true" duration-ms="1" started-at="2019-12-10T16:43:21 IST" finished-at="2019-12-10T16:43:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.HomePageScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.HomePageScript@e874448]" name="f" duration-ms="19067" started-at="2019-12-10T16:43:21 IST" description="Verifying the Home Page Functionality" finished-at="2019-12-10T16:43:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.HomePageScript@e874448]" name="afterClass" is-config="true" duration-ms="7" started-at="2019-12-10T16:43:40 IST" finished-at="2019-12-10T16:43:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.HomePageScript -->
      <class name="script.Nav_Intro_Script">
        <test-method status="PASS" signature="setUpSuiteDetails(org.testng.ITestContext)[pri:0, instance:script.Nav_Intro_Script@4abdb505]" name="setUpSuiteDetails" is-config="true" duration-ms="97" started-at="2019-12-10T16:40:36 IST" finished-at="2019-12-10T16:40:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1816e24a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSuiteDetails -->
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.Nav_Intro_Script@4abdb505]" name="BeforeClass" is-config="true" duration-ms="3002" started-at="2019-12-10T16:40:36 IST" finished-at="2019-12-10T16:40:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.Nav_Intro_Script@4abdb505]" name="captureDesc" is-config="true" duration-ms="1" started-at="2019-12-10T16:40:39 IST" finished-at="2019-12-10T16:40:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.Nav_Intro_Script.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.Nav_Intro_Script@4abdb505]" name="f" duration-ms="52565" started-at="2019-12-10T16:40:39 IST" description="Verifying Intro screens Functionality" finished-at="2019-12-10T16:41:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.Nav_Intro_Script@4abdb505]" name="afterClass" is-config="true" duration-ms="1" started-at="2019-12-10T16:41:31 IST" finished-at="2019-12-10T16:41:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:script.Nav_Intro_Script@4abdb505]" name="afterSuite" is-config="true" duration-ms="20" started-at="2019-12-10T16:47:29 IST" finished-at="2019-12-10T16:47:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- script.Nav_Intro_Script -->
      <class name="script.AddressScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.AddressScript@45820e51]" name="BeforeClass" is-config="true" duration-ms="3001" started-at="2019-12-10T16:45:17 IST" finished-at="2019-12-10T16:45:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.AddressScript@45820e51]" name="captureDesc" is-config="true" duration-ms="1" started-at="2019-12-10T16:45:20 IST" finished-at="2019-12-10T16:45:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.AddressScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.AddressScript@45820e51]" name="f" duration-ms="35298" started-at="2019-12-10T16:45:20 IST" description="Address Selection Functionality" finished-at="2019-12-10T16:45:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.AddressScript@45820e51]" name="afterClass" is-config="true" duration-ms="1" started-at="2019-12-10T16:45:55 IST" finished-at="2019-12-10T16:45:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.AddressScript -->
    </test> <!-- WonnaFoodCustomeriMobileApp -->
  </suite> <!-- WonnaFoodCustomerMobileAppResults -->
</testng-results>
