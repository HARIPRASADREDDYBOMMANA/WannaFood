<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="7" ignored="22" total="34" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="WonnaFoodCustomerMobileAppResults" duration-ms="532036" started-at="2019-12-19T11:52:07 IST" finished-at="2019-12-19T12:00:59 IST">
    <groups>
    </groups>
    <test name="WonnaFoodCustomeriMobileApp" duration-ms="532036" started-at="2019-12-19T11:52:07 IST" finished-at="2019-12-19T12:00:59 IST">
      <class name="script.PlaceOrderScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.PlaceOrderScript@59906517]" name="BeforeClass" is-config="true" duration-ms="3004" started-at="2019-12-19T12:00:00 IST" finished-at="2019-12-19T12:00:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="FAIL" signature="f()[pri:0, instance:script.PlaceOrderScript@59906517]" name="f" duration-ms="8615" started-at="2019-12-19T12:00:03 IST" description="Verifying the Place Order Functionality" finished-at="2019-12-19T12:00:12 IST">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '4.0.0-alpha-1', revision: 'd1d3728cae', time: '2019-04-24T13:42:21'
System info: host: 'DESKTOP-AN5GK7L', ip: '192.168.5.116', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, databaseEnabled: false, desired: {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, deviceName: c52d68ff, fullReset: false, platformName: android, platformVersion: 7.1.1}, deviceApiLevel: 25, deviceManufacturer: OPPO, deviceModel: CPH1801, deviceName: c52d68ff, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: c52d68ff, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 7.1.1, statBarHeight: 36, takesScreenshot: true, viewportRect: {height: 1244, left: 0, top: 36, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: 1063423d-da66-439d-b1ee-10b269bacbbb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '4.0.0-alpha-1', revision: 'd1d3728cae', time: '2019-04-24T13:42:21'
System info: host: 'DESKTOP-AN5GK7L', ip: '192.168.5.116', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, databaseEnabled: false, desired: {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, deviceName: c52d68ff, fullReset: false, platformName: android, platformVersion: 7.1.1}, deviceApiLevel: 25, deviceManufacturer: OPPO, deviceModel: CPH1801, deviceName: c52d68ff, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: c52d68ff, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 7.1.1, statBarHeight: 36, takesScreenshot: true, viewportRect: {height: 1244, left: 0, top: 36, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: 1063423d-da66-439d-b1ee-10b269bacbbb
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:190)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:124)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:577)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:634)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:45)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:298)
at utility.ReadData.fullScreenCapture(ReadData.java:197)
at utility.ReadData.addStepDetails(ReadData.java:119)
at components.PlaceOrder.placeOrder_COD(PlaceOrder.java:59)
at script.PlaceOrderScript.f(PlaceOrderScript.java:13)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.PlaceOrderScript@59906517]" name="captureDesc" is-config="true" duration-ms="0" started-at="2019-12-19T12:00:03 IST" finished-at="2019-12-19T12:00:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.PlaceOrderScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.PlaceOrderScript@59906517]" name="afterClass" is-config="true" duration-ms="0" started-at="2019-12-19T12:00:12 IST" finished-at="2019-12-19T12:00:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.PlaceOrderScript -->
      <class name="script.MerchantViewScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.MerchantViewScript@42d8062c]" name="BeforeClass" is-config="true" duration-ms="3001" started-at="2019-12-19T11:55:49 IST" finished-at="2019-12-19T11:55:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.MerchantViewScript@42d8062c]" name="captureDesc" is-config="true" duration-ms="1" started-at="2019-12-19T11:55:52 IST" finished-at="2019-12-19T11:55:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.MerchantViewScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="FAIL" signature="f()[pri:0, instance:script.MerchantViewScript@42d8062c]" name="f" duration-ms="9042" started-at="2019-12-19T11:55:52 IST" description="Verifying the Merchant View Functionality" finished-at="2019-12-19T11:56:02 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Panner Friedrice] but found [Biriyani Rice]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Panner Friedrice] but found [Biriyani Rice]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at components.MerchantView.veg_Val(MerchantView.java:60)
at script.MerchantViewScript.f(MerchantViewScript.java:19)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.MerchantViewScript@42d8062c]" name="afterClass" is-config="true" duration-ms="1" started-at="2019-12-19T11:56:02 IST" finished-at="2019-12-19T11:56:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.MerchantViewScript -->
      <class name="script.CartScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.CartScript@6043cd28]" name="BeforeClass" is-config="true" duration-ms="3001" started-at="2019-12-19T11:56:02 IST" finished-at="2019-12-19T11:56:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.CartScript@6043cd28]" name="captureDesc" is-config="true" duration-ms="0" started-at="2019-12-19T11:56:05 IST" finished-at="2019-12-19T11:56:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.CartScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="FAIL" signature="f()[pri:0, instance:script.CartScript@6043cd28]" name="f" duration-ms="23504" started-at="2019-12-19T11:56:05 IST" description="Verifying the Cart Functionality" finished-at="2019-12-19T11:56:28 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [: Paradise Biryani] but found [: Pine & Dine]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [: Paradise Biryani] but found [: Pine & Dine]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at components.CartFunctionality.rest_Product_Val(CartFunctionality.java:61)
at script.CartScript.f(CartScript.java:15)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.CartScript@6043cd28]" name="afterClass" is-config="true" duration-ms="0" started-at="2019-12-19T11:56:28 IST" finished-at="2019-12-19T11:56:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.CartScript -->
      <class name="script.LoginScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.LoginScript@29b5cd00]" name="BeforeClass" is-config="true" duration-ms="3004" started-at="2019-12-19T11:52:58 IST" finished-at="2019-12-19T11:53:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.LoginScript@29b5cd00]" name="captureDesc" is-config="true" duration-ms="1" started-at="2019-12-19T11:53:01 IST" finished-at="2019-12-19T11:53:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.LoginScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.LoginScript@29b5cd00]" name="f" duration-ms="65195" started-at="2019-12-19T11:53:01 IST" description="Verifying Login Functionality" finished-at="2019-12-19T11:54:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.LoginScript@29b5cd00]" name="afterClass" is-config="true" duration-ms="1" started-at="2019-12-19T11:54:06 IST" finished-at="2019-12-19T11:54:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.LoginScript -->
      <class name="script.AlertsScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.AlertsScript@12cdcf4]" name="BeforeClass" is-config="true" duration-ms="3004" started-at="2019-12-19T12:00:37 IST" finished-at="2019-12-19T12:00:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.AlertsScript@12cdcf4]" name="captureDesc" is-config="true" duration-ms="0" started-at="2019-12-19T12:00:40 IST" finished-at="2019-12-19T12:00:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.AlertsScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="FAIL" signature="f()[pri:0, instance:script.AlertsScript@12cdcf4]" name="f" duration-ms="18387" started-at="2019-12-19T12:00:40 IST" description="Verifying the Alerts Functionality" finished-at="2019-12-19T12:00:59 IST">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '4.0.0-alpha-1', revision: 'd1d3728cae', time: '2019-04-24T13:42:21'
System info: host: 'DESKTOP-AN5GK7L', ip: '192.168.5.116', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, databaseEnabled: false, desired: {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, deviceName: c52d68ff, fullReset: false, platformName: android, platformVersion: 7.1.1}, deviceApiLevel: 25, deviceManufacturer: OPPO, deviceModel: CPH1801, deviceName: c52d68ff, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: c52d68ff, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 7.1.1, statBarHeight: 36, takesScreenshot: true, viewportRect: {height: 1244, left: 0, top: 36, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: 1063423d-da66-439d-b1ee-10b269bacbbb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '4.0.0-alpha-1', revision: 'd1d3728cae', time: '2019-04-24T13:42:21'
System info: host: 'DESKTOP-AN5GK7L', ip: '192.168.5.116', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, databaseEnabled: false, desired: {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, deviceName: c52d68ff, fullReset: false, platformName: android, platformVersion: 7.1.1}, deviceApiLevel: 25, deviceManufacturer: OPPO, deviceModel: CPH1801, deviceName: c52d68ff, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: c52d68ff, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 7.1.1, statBarHeight: 36, takesScreenshot: true, viewportRect: {height: 1244, left: 0, top: 36, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: 1063423d-da66-439d-b1ee-10b269bacbbb
at sun.reflect.GeneratedConstructorAccessor57.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:190)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:124)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:577)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:634)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:45)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:298)
at utility.ReadData.fullScreenCapture(ReadData.java:186)
at utility.ReadData.addStepDetails(ReadData.java:119)
at components.AlertsFunctionality.nav_AlertsPage(AlertsFunctionality.java:30)
at script.AlertsScript.f(AlertsScript.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.AlertsScript@12cdcf4]" name="afterClass" is-config="true" duration-ms="4" started-at="2019-12-19T12:00:59 IST" finished-at="2019-12-19T12:00:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.AlertsScript -->
      <class name="script.SearchScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.SearchScript@45820e51]" name="BeforeClass" is-config="true" duration-ms="3001" started-at="2019-12-19T11:55:15 IST" finished-at="2019-12-19T11:55:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.SearchScript@45820e51]" name="captureDesc" is-config="true" duration-ms="1" started-at="2019-12-19T11:55:18 IST" finished-at="2019-12-19T11:55:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.SearchScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.SearchScript@45820e51]" name="f" duration-ms="31237" started-at="2019-12-19T11:55:18 IST" description="Verifying the Search Functionality" finished-at="2019-12-19T11:55:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.SearchScript@45820e51]" name="afterClass" is-config="true" duration-ms="1" started-at="2019-12-19T11:55:49 IST" finished-at="2019-12-19T11:55:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.SearchScript -->
      <class name="script.RefereFunctionalityScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.RefereFunctionalityScript@25af5db5]" name="BeforeClass" is-config="true" duration-ms="3017" started-at="2019-12-19T12:00:26 IST" finished-at="2019-12-19T12:00:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.RefereFunctionalityScript@25af5db5]" name="captureDesc" is-config="true" duration-ms="0" started-at="2019-12-19T12:00:29 IST" finished-at="2019-12-19T12:00:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.RefereFunctionalityScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="FAIL" signature="f()[pri:0, instance:script.RefereFunctionalityScript@25af5db5]" name="f" duration-ms="8308" started-at="2019-12-19T12:00:29 IST" description="Verifying the Refer Functionality" finished-at="2019-12-19T12:00:37 IST">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '4.0.0-alpha-1', revision: 'd1d3728cae', time: '2019-04-24T13:42:21'
System info: host: 'DESKTOP-AN5GK7L', ip: '192.168.5.116', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, databaseEnabled: false, desired: {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, deviceName: c52d68ff, fullReset: false, platformName: android, platformVersion: 7.1.1}, deviceApiLevel: 25, deviceManufacturer: OPPO, deviceModel: CPH1801, deviceName: c52d68ff, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: c52d68ff, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 7.1.1, statBarHeight: 36, takesScreenshot: true, viewportRect: {height: 1244, left: 0, top: 36, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: 1063423d-da66-439d-b1ee-10b269bacbbb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '4.0.0-alpha-1', revision: 'd1d3728cae', time: '2019-04-24T13:42:21'
System info: host: 'DESKTOP-AN5GK7L', ip: '192.168.5.116', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, databaseEnabled: false, desired: {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, deviceName: c52d68ff, fullReset: false, platformName: android, platformVersion: 7.1.1}, deviceApiLevel: 25, deviceManufacturer: OPPO, deviceModel: CPH1801, deviceName: c52d68ff, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: c52d68ff, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 7.1.1, statBarHeight: 36, takesScreenshot: true, viewportRect: {height: 1244, left: 0, top: 36, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: 1063423d-da66-439d-b1ee-10b269bacbbb
at sun.reflect.GeneratedConstructorAccessor57.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:190)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:124)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:577)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:634)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:45)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:298)
at utility.ReadData.fullScreenCapture(ReadData.java:186)
at utility.ReadData.addStepDetails(ReadData.java:119)
at components.ReferFunctionality.refer_Fun_Val(ReferFunctionality.java:30)
at script.RefereFunctionalityScript.f(RefereFunctionalityScript.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.RefereFunctionalityScript@25af5db5]" name="afterClass" is-config="true" duration-ms="0" started-at="2019-12-19T12:00:37 IST" finished-at="2019-12-19T12:00:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.RefereFunctionalityScript -->
      <class name="script.WalletScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.WalletScript@5bfbf16f]" name="BeforeClass" is-config="true" duration-ms="3021" started-at="2019-12-19T12:00:12 IST" finished-at="2019-12-19T12:00:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="FAIL" signature="f()[pri:0, instance:script.WalletScript@5bfbf16f]" name="f" duration-ms="11236" started-at="2019-12-19T12:00:15 IST" description="Verify the Wallet Functionality" finished-at="2019-12-19T12:00:26 IST">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '4.0.0-alpha-1', revision: 'd1d3728cae', time: '2019-04-24T13:42:21'
System info: host: 'DESKTOP-AN5GK7L', ip: '192.168.5.116', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, databaseEnabled: false, desired: {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, deviceName: c52d68ff, fullReset: false, platformName: android, platformVersion: 7.1.1}, deviceApiLevel: 25, deviceManufacturer: OPPO, deviceModel: CPH1801, deviceName: c52d68ff, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: c52d68ff, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 7.1.1, statBarHeight: 36, takesScreenshot: true, viewportRect: {height: 1244, left: 0, top: 36, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: 1063423d-da66-439d-b1ee-10b269bacbbb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '4.0.0-alpha-1', revision: 'd1d3728cae', time: '2019-04-24T13:42:21'
System info: host: 'DESKTOP-AN5GK7L', ip: '192.168.5.116', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, databaseEnabled: false, desired: {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, deviceName: c52d68ff, fullReset: false, platformName: android, platformVersion: 7.1.1}, deviceApiLevel: 25, deviceManufacturer: OPPO, deviceModel: CPH1801, deviceName: c52d68ff, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: c52d68ff, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 7.1.1, statBarHeight: 36, takesScreenshot: true, viewportRect: {height: 1244, left: 0, top: 36, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: 1063423d-da66-439d-b1ee-10b269bacbbb
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:190)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:124)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:577)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:634)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:45)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:298)
at utility.ReadData.fullScreenCapture(ReadData.java:186)
at utility.ReadData.addStepDetails(ReadData.java:119)
at components.Wallet.refer_validation(Wallet.java:50)
at script.WalletScript.f(WalletScript.java:13)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.WalletScript@5bfbf16f]" name="captureDesc" is-config="true" duration-ms="0" started-at="2019-12-19T12:00:15 IST" finished-at="2019-12-19T12:00:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.WalletScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.WalletScript@5bfbf16f]" name="afterClass" is-config="true" duration-ms="0" started-at="2019-12-19T12:00:26 IST" finished-at="2019-12-19T12:00:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.WalletScript -->
      <class name="script.HomePageScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.HomePageScript@7113b13f]" name="BeforeClass" is-config="true" duration-ms="3003" started-at="2019-12-19T11:54:48 IST" finished-at="2019-12-19T11:54:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.HomePageScript@7113b13f]" name="captureDesc" is-config="true" duration-ms="5" started-at="2019-12-19T11:54:51 IST" finished-at="2019-12-19T11:54:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.HomePageScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.HomePageScript@7113b13f]" name="f" duration-ms="24016" started-at="2019-12-19T11:54:51 IST" description="Verifying the Home Page Functionality" finished-at="2019-12-19T11:55:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.HomePageScript@7113b13f]" name="afterClass" is-config="true" duration-ms="2" started-at="2019-12-19T11:55:15 IST" finished-at="2019-12-19T11:55:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.HomePageScript -->
      <class name="script.ProfileFunctionalityScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.ProfileFunctionalityScript@60285225]" name="BeforeClass" is-config="true" duration-ms="3001" started-at="2019-12-19T11:54:06 IST" finished-at="2019-12-19T11:54:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.ProfileFunctionalityScript@60285225]" name="captureDesc" is-config="true" duration-ms="1" started-at="2019-12-19T11:54:09 IST" finished-at="2019-12-19T11:54:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.ProfileFunctionalityScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.ProfileFunctionalityScript@60285225]" name="f" duration-ms="39343" started-at="2019-12-19T11:54:09 IST" description="Verifying the Profile Functionality" finished-at="2019-12-19T11:54:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.ProfileFunctionalityScript@60285225]" name="afterClass" is-config="true" duration-ms="1" started-at="2019-12-19T11:54:48 IST" finished-at="2019-12-19T11:54:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.ProfileFunctionalityScript -->
      <class name="script.Nav_Intro_Script">
        <test-method status="PASS" signature="setUpSuiteDetails(org.testng.ITestContext)[pri:0, instance:script.Nav_Intro_Script@e874448]" name="setUpSuiteDetails" is-config="true" duration-ms="56" started-at="2019-12-19T11:52:07 IST" finished-at="2019-12-19T11:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@28d79cba]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSuiteDetails -->
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.Nav_Intro_Script@e874448]" name="BeforeClass" is-config="true" duration-ms="3020" started-at="2019-12-19T11:52:07 IST" finished-at="2019-12-19T11:52:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.Nav_Intro_Script@e874448]" name="captureDesc" is-config="true" duration-ms="0" started-at="2019-12-19T11:52:10 IST" finished-at="2019-12-19T11:52:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.Nav_Intro_Script.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="f()[pri:0, instance:script.Nav_Intro_Script@e874448]" name="f" duration-ms="47807" started-at="2019-12-19T11:52:10 IST" description="Verifying Intro screens Functionality" finished-at="2019-12-19T11:52:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.Nav_Intro_Script@e874448]" name="afterClass" is-config="true" duration-ms="2" started-at="2019-12-19T11:52:58 IST" finished-at="2019-12-19T11:52:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:script.Nav_Intro_Script@e874448]" name="afterSuite" is-config="true" duration-ms="15" started-at="2019-12-19T12:00:59 IST" finished-at="2019-12-19T12:00:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- script.Nav_Intro_Script -->
      <class name="script.AddressScript">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:script.AddressScript@cb51256]" name="BeforeClass" is-config="true" duration-ms="3001" started-at="2019-12-19T11:56:28 IST" finished-at="2019-12-19T11:56:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="FAIL" signature="f()[pri:0, instance:script.AddressScript@cb51256]" name="f" duration-ms="209071" started-at="2019-12-19T11:56:31 IST" description="Address Selection Functionality" finished-at="2019-12-19T12:00:00 IST">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '4.0.0-alpha-1', revision: 'd1d3728cae', time: '2019-04-24T13:42:21'
System info: host: 'DESKTOP-AN5GK7L', ip: '192.168.5.116', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, databaseEnabled: false, desired: {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, deviceName: c52d68ff, fullReset: false, platformName: android, platformVersion: 7.1.1}, deviceApiLevel: 25, deviceManufacturer: OPPO, deviceModel: CPH1801, deviceName: c52d68ff, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: c52d68ff, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 7.1.1, statBarHeight: 36, takesScreenshot: true, viewportRect: {height: 1244, left: 0, top: 36, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: 1063423d-da66-439d-b1ee-10b269bacbbb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '4.0.0-alpha-1', revision: 'd1d3728cae', time: '2019-04-24T13:42:21'
System info: host: 'DESKTOP-AN5GK7L', ip: '192.168.5.116', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, databaseEnabled: false, desired: {appActivity: com.ongo.wanafood.SplashScr..., appPackage: com.ongo.wanafood, deviceName: c52d68ff, fullReset: false, platformName: android, platformVersion: 7.1.1}, deviceApiLevel: 25, deviceManufacturer: OPPO, deviceModel: CPH1801, deviceName: c52d68ff, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: c52d68ff, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 7.1.1, statBarHeight: 36, takesScreenshot: true, viewportRect: {height: 1244, left: 0, top: 36, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: 1063423d-da66-439d-b1ee-10b269bacbbb
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:190)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:124)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:577)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:634)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:45)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:298)
at utility.ReadData.fullScreenCapture(ReadData.java:186)
at utility.ReadData.addStepDetails(ReadData.java:119)
at components.AddressSelectionFunctionality.select_Address(AddressSelectionFunctionality.java:81)
at script.AddressScript.f(AddressScript.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="captureDesc(java.lang.reflect.Method)[pri:0, instance:script.AddressScript@cb51256]" name="captureDesc" is-config="true" duration-ms="0" started-at="2019-12-19T11:56:31 IST" finished-at="2019-12-19T11:56:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.AddressScript.f() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureDesc -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:script.AddressScript@cb51256]" name="afterClass" is-config="true" duration-ms="0" started-at="2019-12-19T12:00:00 IST" finished-at="2019-12-19T12:00:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- script.AddressScript -->
    </test> <!-- WonnaFoodCustomeriMobileApp -->
  </suite> <!-- WonnaFoodCustomerMobileAppResults -->
</testng-results>
